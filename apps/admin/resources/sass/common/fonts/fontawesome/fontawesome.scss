$fontPath: "/fonts/fontawesome";
$fa-css-prefix: "fa";

@use "sass:map";
@use "variables";

@font-face {
    font-family: "FontAwesome";
    font-style: normal;
    font-weight: 400;
    font-display: variables.$fa-font-display;
    src: url("#{$fontPath}/fa-regular-400.woff2") format("woff2"),
    url("#{$fontPath}/fa-regular-400.ttf") format("truetype");
}

@font-face {
    font-family: "FontAwesome";
    font-style: normal;
    font-weight: 100;
    font-display: variables.$fa-font-display;
    src: url("#{$fontPath}/fa-thin-100.woff2") format("woff2"),
    url("#{$fontPath}/fa-thin-100.woff") format("woff"),
    url("#{$fontPath}/fa-thin-100.ttf") format("truetype");
}

//.fat,
//.fa-thin {
//    font-family: "FontAwesome";
//    font-weight: 100;
//    font-style: normal;
//}
@mixin fa-default($icon) {
    font-family: "FontAwesome";
    font-style: normal;
    font-display: variables.$fa-font-display;
    font-size: 16px;
    line-height: 16px;
    @if map.has-key(variables.$fa-icons, $icon) {
        $icon: map.get(variables.$fa-icons, $icon);
    }
    &:before {content: variables.fa-content($icon);}
}
@mixin fa-icon-regular($icon) {
    font-weight: 400;
    @include fa-default($icon);
}

@mixin fa-icon-thin($icon) {
    font-weight: 100;
    @include fa-default($icon);
}

//@each $name, $icon in variables.$fa-icons {
//    .#{$fa-css-prefix}-#{$name}::before { content: unquote("\"#{ $icon }\""); }
//}
