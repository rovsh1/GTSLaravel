tinymce.PluginManager.add('filemanager', function (editor) {
    editor.options.register('external_filemanager_url', {processor: 'url'});

    editor.options.set('file_picker_callback', filemanager);

    /*function filemanager_onMessage(event) {
        if (editor.settings.external_filemanager_path.toLowerCase().indexOf(event.origin.toLowerCase()) === 0) {
            if (event.data.sender === 'responsivefilemanager') {
                tinymce.activeEditor.windowManager.getParams().setUrl(event.data.url);
                tinymce.activeEditor.windowManager.close();

                // Remove event listener for a message from ResponsiveFilemanager
                if (window.removeEventListener) {
                    window.removeEventListener('message', filemanager_onMessage, false);
                } else {
                    window.detachEvent('onmessage', filemanager_onMessage);
                }
            }
        }
    }*/

    const getOption = (name) => editor.options.get(name);

    function filemanager(callback, value, meta) {
        var width = window.innerWidth - 30;
        var height = window.innerHeight - 60;
        if (width > 1800) width = 1800;
        if (height > 1200) height = 1200;
        if (width > 600) {
            var width_reduce = (width - 20) % 138;
            width = width - width_reduce + 10;
        }

        let urltype = '';
        if (meta) {
            if (meta.filetype === 'image' || meta.mediaType === 'image')
                urltype = 'image';
            else if (meta.filetype === 'media' || meta.mediaType === 'media')
                urltype = 'media';
            else
                urltype = 'file';
        }

        const dialogUrl = getOption('external_filemanager_url') + '?type=' + urltype;
        console.log(dialogUrl, editor)

        const dialog = editor.windowManager.openUrl({
            title: 'FileManager',
            url: dialogUrl,
            width: width,
            height: height,
            resizable: true,
            maximizable: true,
            inline: 1,
        });

        window.addEventListener('message', function receiveMessage(event) {
            if (event.data.sender !== 'filemanager')
                return;

            const file = event.data;
            if (callback)
                callback(file.url, {text: file.name});
            else {
                const html = (function () {
                    if (0 === file.mimeType.indexOf('image/'))
                        return '<img src="' + file.url + '" />';
                    else
                        return '<a href="' + file.url + '" target="_blank">' + file.name + '</a>';
                })();
                editor.execCommand('mceInsertContent', false, html);
            }

            dialog.close();

            window.removeEventListener('message', receiveMessage, false);
        }, false);
    }

    editor.addCommand('mceFileManager', filemanager);
    editor.ui.registry.addButton("insertfile", {
        icon: "browse",
        title: "Insert file",
        onAction: function () {
            editor.execCommand("mceFileManager");
        }
    });

    return false;
});
